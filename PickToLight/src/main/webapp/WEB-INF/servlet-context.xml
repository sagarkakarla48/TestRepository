<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	<task:annotation-driven />
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		</beans:bean>
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<beans:bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<beans:property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<beans:property name="url"
			value="jdbc:mysql://localhost:3306/picktolight" />
		<beans:property name="username" value="root" />
		<beans:property name="password" value="root123" />
		<beans:property name="initialSize" value="10" />
        <beans:property name="maxActive" value="500" />
        <beans:property name="maxWait" value="5000" />
	</beans:bean>

	<!-- Hibernate 4 SessionFactory Bean definition -->
	<beans:bean id="hibernate4AnnotatedSessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="annotatedClasses">
			<beans:list>
				<beans:value>com.ltts.picktolight.domain.ProductBarcode
				</beans:value>
				<beans:value>com.ltts.picktolight.domain.ColorPicker</beans:value>
				<beans:value>com.ltts.picktolight.domain.UploadProducts</beans:value>
				<beans:value>com.ltts.picktolight.domain.BatteryInfo</beans:value>
				<beans:value>com.ltts.picktolight.domain.AdminLogin</beans:value>
				<beans:value>com.ltts.picktolight.domain.APKFileDetails</beans:value>
				<beans:value>com.ltts.picktolight.domain.OrderHistory</beans:value>  
				<beans:value>com.ltts.picktolight.domain.LowInventoryInfo</beans:value>
				<beans:value>com.ltts.picktolight.domain.ProductCartDetails</beans:value>
				<beans:value>com.ltts.picktolight.domain.MisMatchProducts</beans:value>
			</beans:list>
		</beans:property>
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
			</beans:props>

		</beans:property>
	</beans:bean>


   <beans:bean id="adminLoginDao"
		class="com.ltts.picktolight.dao.AdminLoginDaoImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="adminLoginService"
		class="com.ltts.picktolight.service.AdminLoginServiceImpl">
		<beans:property name="adminLoginDao" ref="adminLoginDao"></beans:property>
	</beans:bean>
	
	<beans:bean id="uploadProductDAO"
		class="com.ltts.picktolight.dao.UploadProductDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="uploadProductService"
		class="com.ltts.picktolight.service.UploadProductServiceImpl">
		<beans:property name="uploadProductDAO" ref="uploadProductDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="productDAO" class="com.ltts.picktolight.dao.ProductDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	
	<beans:bean id="orderHistoryDAO" class="com.ltts.picktolight.dao.OrderHistoryDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	
	<beans:bean id="colorDAO" class="com.ltts.picktolight.dao.ColorPickerDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="batteryLevelDAO" class="com.ltts.picktolight.dao.BatteryInfoDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="productService"
		class="com.ltts.picktolight.service.ProductServiceImpl">
		<beans:property name="productDAO" ref="productDAO"></beans:property>
		<beans:property name="colorDAO" ref="colorDAO"></beans:property>
		<beans:property name="orderHistoryDAO" ref="orderHistoryDAO"></beans:property>
	</beans:bean>
	
	<beans:bean id="batteryInfoService"
		class="com.ltts.picktolight.service.BatteryInfoServiceImpl">
		<beans:property name="batteryLevelDAO" ref="batteryLevelDAO"></beans:property>
	</beans:bean>
	
	
	<beans:bean id="apkDetailsDAO"
		class="com.ltts.picktolight.dao.APKFileDetailsDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="apkFileDetailsService"
		class="com.ltts.picktolight.service.APKFileDetailsServiceImpl">
		<beans:property name="apkDetailsDAO" ref="apkDetailsDAO"></beans:property>

	</beans:bean>
	
	 <beans:bean id="lowInventoryInfoDao"
		class="com.ltts.picktolight.dao.LowInventoryInfoDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="lowInventoryInfoService"
		class="com.ltts.picktolight.service.LowInventoryInfoServiceImpl">
		<beans:property name="lowInventoryInfoDao" ref="lowInventoryInfoDao"></beans:property>
	</beans:bean>
	
	<beans:bean id="misMatchProductsDAO"
		class="com.ltts.picktolight.dao.MisMatchProductsDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="misMatchProductsService"
		class="com.ltts.picktolight.service.MisMatchProductsServiceImpl">
		<beans:property name="misMatchProductsDAO" ref="misMatchProductsDAO"></beans:property>
	</beans:bean>
	<beans:bean id="cartServiceDAO"
		class="com.ltts.picktolight.dao.CartServiceDAOImpl">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>
	<beans:bean id="cartService"
		class="com.ltts.picktolight.service.CartServiceImpl">
		<beans:property name="cartServiceDAO" ref="cartServiceDAO"></beans:property>
	</beans:bean>
	
	
	<context:component-scan base-package="com.ltts.picktolight" />

	<tx:annotation-driven transaction-manager="transactionManager" />

	<beans:bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory"
			ref="hibernate4AnnotatedSessionFactory" />
	</beans:bean>

</beans:beans>